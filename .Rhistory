# Subset weight data before treatment
report <- subset(df,  report == 1 & year == 2020, cetr_5_s,
drop = TRUE)
#Unpaired Wilcoxon
# Subset weight data before treatment
report <- subset(df,  report == 1 & Year == 2020, cetr_5_s,
drop = TRUE)
# subset weight data after treatment
noreport <- subset(df,  report == 0 & Year == 2020, cetr_5_s,
drop = TRUE)
wilcox.test(report, noreport, alternative = "greater")
#Unpaired Wilcoxon
# Subset weight data before treatment
report <- subset(df,  (report == 1 & Year == 2020), cetr_5_s,
drop = TRUE)
#Unpaired Wilcoxon
# Subset weight data before treatment
report <- subset(df,  report == 1, cetr_5_s,
drop = TRUE)
#Unpaired Wilcoxon
# Subset weight data before treatment
report <- subset(df,  report == 1, cetr_5_s,
drop = TRUE)
?subset
# subset weight data after treatment
noreport <- subset(df,  report == 0, select = cetr_5_s,
drop = TRUE)
#Unpaired Wilcoxon
# Subset weight data before treatment
report <- subset(df,  report == 1, cetr_5_s,
drop = TRUE)
#Unpaired Wilcoxon
# Subset weight data before treatment
report1 <- subset(df,  report == 1, CASH_TAX_PAID,
drop = TRUE)
#Unpaired Wilcoxon
# Subset weight data before treatment
report1 <- subset(df,  report == 1, CTP,
drop = TRUE)
# subset weight data after treatment
noreport1 <- subset(df,  report == 0, CTP,
drop = TRUE)
report <- df$cetr_5_s[df$report==1]
#Unpaired Wilcoxon
# Subset weight data before treatment
report <- subset(df,  report == "report", cetr_5_s,
drop = TRUE)
# subset weight data after treatment
noreport <- subset(df,  report == "no report", select = cetr_5_s,
drop = TRUE)
wilcox.test(report, noreport, alternative = "greater")
report1 <- subset(df,  report == "report", CTP,
drop = TRUE)
# subset  data after treatment
noreport1 <- subset(df,  report == "no report", CTP,
drop = TRUE)
wilcox.test(report1, noreport1, alternative = "less")
wilcox.test(report1, noreport1, alternative = "greater")
data3 <- df %>%
mutate(sdg = ifelse(is.na(sdg), 0, sdg),
rep = as.double(report))
data3 %>% filter(cetr_5 <0.5 & cetr_5 >0 ) %>%
ggplot(., aes(x=cetr_5, y=sdg, col = ctrygrp)) +
geom_point() +
facet_grid(. ~ Year)
wilcox.test(report1, noreport1, alternative = "greater")
df %>% select(Year, ISIN) %>%
table()
#check if df is balanced
df %>% is.pbalanced(index =c("Year", "ISIN"))
pdata <- unique(df, by = c("Year", "ISIN"))
df_t %>% select(Year, ISIN) %>%
table()
df_t %>% is.pbalanced(index =c("Year", "ISIN"))
#truncate data for cetr_5 > 0 and cetr_5 <0.5 (as is customary in other)
df_t <- df %>% filter(cetr_5 > 0 & cetr_5 < 0.5)
# check if data set is balanced
df_t %>% is.pbalanced(index =c("Year", "ISIN"))
#if required, balance truncated data
df_t_b <- df_t %>% pbalanced(index =c("Year", "ISIN"))
?pbalanced
#if required, balance truncated data
df_t_b <- df_t %>% make.pbalanced(index =c("Year", "ISIN"))
?make.pbalanced
#if required, balance truncated data
df_t_b <- df_t %>% make.pbalanced(index =c("Year", "ISIN"), balance.type = shared.individuals)
#if required, balance truncated data
df_t_b <- df_t %>% make.pbalanced(index =c("Year", "ISIN"), balance.type = "shared.individuals")
#if required, balance truncated data
df_t_b <- df_t %>% make.pbalanced(index =c("Year", "ISIN"), balance.type = "shared.times")
#test within and random effect and run Hausmann test
form1 <- cetr_5_s ~ log(sdg+1) + RDS + SIZE + LEV + ROA + FOREIGN + ctrygrp
wi <- plm(form1, data = df_t, model = "within")
duplicated(df_t)
fixed1 <- plm(cetr_5_s ~ log(sdg+1) + RDS + SIZE + LEV + ROA +
FOREIGN + ctrygrp, data=df, index=c("Year"), model="within")
wi <- plm(form1, data = df, model = "within")
fixed1 <- plm(cetr_5_s ~ log(sdg+1) + RDS + SIZE + LEV + ROA +
FOREIGN + ctrygrp, data=df, index=c("Year"), model="within")
summary(fixed1)
wi <- plm(form1, data = df, index=c("Year"), model = "within")
re <- plm(form1, data = df_t, index=c("Year"), model = "random")
re <- plm(form1, data = df_t, index=c("Year"), model = "random",  random.method = "walhus")
phtest(wi, re)
wi <- plm(form1, data = df, index=c("ctrygrp","Year"), model = "within")
wi <- plm(form1, data = df, index=c("ISIN","Year"), model = "within")
re <- plm(form1, data = df_t, index=c("ISIN", "Year"), model = "random",  random.method = "walhus")
phtest(wi, re)
ols <- lm(form1 + factor(Year), data = df)
ols <- lm(cetr_5_s ~ log(sdg+1) + RDS + SIZE + LEV + ROA + FOREIGN + ctrygrp + factor(Year), data = df)
#F-test to see if LM is better than OLS
pFtest(we, ols)
#F-test to see if LM is better than OLS
pFtest(wi, ols)
?pFtest
phtest(wi, re) #
phtest(re, wi) #
fixed2 <- plm(cetr_5_s ~ log(sdg01+1) + log(sdg02+1) + log(sdg03+1) +
log(sdg04+1) + log(sdg05+1) +
log(sdg06+1) + log(sdg07+1) + log(sdg08+1) +
+log(sdg09+1) + log(sdg10+1) + log(sdg11+1) +
log(sdg12+1) + log(sdg13+1) + log(sdg14+1) + log(sdg15+1) +
log(sdg16+1) + log(sdg17+1) + RDS + SIZE + LEV +
ROA + ctrygrp + Sector + factor(Year),
data=df_t, index=c("Year"), model="within")
random2 <- plm(cetr_5_s ~ log(sdg01+1) + log(sdg02+1) + log(sdg03+1) + log(sdg04+1) +
log(sdg05+1) + log(sdg06+1) + log(sdg07+1) + log(sdg08+1) +
+log(sdg09+1) + log(sdg10+1) + log(sdg11+1) + log(sdg12+1) +
log(sdg13+1) + log(sdg14+1) + log(sdg15+1) + log(sdg16+1) +
log(sdg17+1) + RDS + SIZE + LEV +
FOREIGN + ROA + ctrygrp + factor(Year), data=df_t, index=c("Year"), model="random", random.method = "walhus")
summary(random2)
phtest(fixed2, random2)
summary(random2)
random3tb <- plm(cetr_5_s ~ report + SDG + SIZE + FOREIGN +
ctrygrp, data=df_t_b, index=c("Year"), model="random", random.method = "walhus")
summary(random3tb)
random4t <- plm(cetr_5_s ~ report + SIZE + ROA + LEV + FOREIGN + log(sdg+1) + log(sdg01+1) + log(sdg02+1) +
log(sdg03+1) + log(sdg04+1) + log(sdg05+1) + log(sdg06+1) +
log(sdg07+1) + log(sdg08+1) +
+log(sdg09+1) + log(sdg10+1) + log(sdg11+1) + log(sdg12+1) +
log(sdg13+1) + log(sdg14+1) + log(sdg15+1) + log(sdg16+1) +
log(sdg17+1) + factor(Year) + ctrygrp ,
data=df_t, index=c("Year"),
effect = "twoways",
model="random",
print.level = 3,
random.method = "walhus")
summary(random4t)
random4t <- plm(form2, data=df_t, index=c("Year"),
effect = "twoways",
model="random",
print.level = 3,
random.method = "walhus")
form2 <- log(sdg01+1) + log(sdg02+1) + log(sdg03+1) + log(sdg04+1) +
log(sdg05+1) + log(sdg06+1) + log(sdg07+1) + log(sdg08+1) +
+log(sdg09+1) + log(sdg10+1) + log(sdg11+1) + log(sdg12+1) +
log(sdg13+1) + log(sdg14+1) + log(sdg15+1) + log(sdg16+1) +
log(sdg17+1) + RDS + SIZE + LEV +
FOREIGN + ROA + ctrygrp + factor(Year)
form2 <- cetr_5_s ~ log(sdg01+1) + log(sdg02+1) + log(sdg03+1) + log(sdg04+1) +
log(sdg05+1) + log(sdg06+1) + log(sdg07+1) + log(sdg08+1) +
+log(sdg09+1) + log(sdg10+1) + log(sdg11+1) + log(sdg12+1) +
log(sdg13+1) + log(sdg14+1) + log(sdg15+1) + log(sdg16+1) +
log(sdg17+1) + RDS + SIZE + LEV +
FOREIGN + ROA + ctrygrp + factor(Year)
fixed2 <- plm(form2, data=df_t, index=c("Year"), model="within")
summary(fixed2)
random2 <- plm(form2, data=df_t, index=c("Year"), model="random",
random.method = "walhus")
summary(random2)
phtest(fixed2, random2)
random4t <- plm(form2, data=df_t, index=c("Year"),
effect = "twoways",
model="random",
print.level = 3,
random.method = "walhus")
summary(random4t)
summary(random2)
random4tb <- plm(cetr_5_s ~ report + SIZE + ROA + LEV + FOREIGN + log(sdg+1) + log(sdg01+1) + log(sdg02+1) +
log(sdg03+1) + log(sdg04+1) + log(sdg05+1) + log(sdg06+1) +
log(sdg07+1) + log(sdg08+1) +
+log(sdg09+1) + log(sdg10+1) + log(sdg11+1) + log(sdg12+1) +
log(sdg13+1) + log(sdg14+1) + log(sdg15+1) + log(sdg16+1) +
log(sdg17+1) + factor(Year) + ctrygrp ,
data=df_t, index=c("Year"),
effect = "twoways",
model="random",
print.level = 3,
random.method = "walhus")
summary(random4tb)
random4tb <- plm(form2, data=df_t_b, index=c("Year"),
effect = "twoways",
model="random",
print.level = 3,
random.method = "walhus")
summary(random4tb)
summary(random4t)
summary(random2)
phtest(fixed2, random2)
summary(fixed2)
?plm
pool <- plm(form2, data=df_t, model="pooling")
pool <- plm(form2, data=df_t, model="pooling", random.method = "walhus")
pool <- plm(form2, data=df_t_b, model="pooling", random.method = "walhus")
summary(pool)
pool <- plm(form2, data=df_t_b, model="pooling", index=c("Year"), random.method = "walhus")
summary(pool)
# Breusch-Pagan Lagrange Multiplier for random effects. Null is no panel effect (i.e. OLS better).
plmtest(pool, type=c("bp"))
random6 <- pglm(form2 ,
data=df_t, index=c("Year", "ctrygrp"),
family = gaussian,
effect = "time",
model="random",
method = "nr",
print.level = 3)
summary(random6)
random4tb <- plm(form2, data=df_t_b, index=c("Year", "ctrygrp"),
effect = "twoways",
model="random",
print.level = 3,
random.method = "walhus")
random6 <- pglm(form2 ,
data=df_t, index=c("Year"),
family = gaussian,
effect = "time",
model="random",
method = "nr",
print.level = 3)
summary(random6)
random7 <- pglm(form2, data=df_t, index=c("Year"),
family = gaussian,
model="random",
effect = "twoways",
method = "nr",
print.level = 3)
summary(random7)
glm <- glm(form2, data=df_t, index=c("Year"),
family = gaussian,
)
glm <- glm(form2, data=df_t,
family = gaussian,
)
summary(glm())
summary(glm)
?glm
glm <- glm(form2, data=df,
family = gaussian
)
summary(glm)
glm <- glm(form2, data=df_t_b,
family = gaussian
)
summary(glm)
random8 <- pglm(SDG ~ cetr_5_s + SIZE + FOREIGN, data=df_t, index=c("Year"),
family = binomial('probit'),
model="random",
effect = "twoways",
method = "nr",
print.level = 3)
summary(random8)
random8 <- pglm(SDG ~ cetr_5_s + SIZE + FOREIGN + ctrygrp, data=df_t, index=c("Year", "ctrygrp"),
family = binomial('probit'),
model="random",
effect = "twoways",
method = "nr",
print.level = 3)
summary(random8)
#we draaien de DV en IV om
form3 <- SDG ~ cetr_5_s + RDS + SIZE + LEV + FOREIGN + ROA + ctrygrp + factor(Year)
random8 <- pglm(form3, data=df_t, index=c("Year", "ctrygrp"),
family = binomial('probit'),
model="random",
effect = "twoways",
method = "nr",
print.level = 3)
summary(random8)
#top scorers SDG02 per Sector
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & Year %in% c(2016,2020)) %>%
group_by(Sector) %>%
summarize(sdg02_sum = sum(sdg02)) %>%
arrange(desc(sdg02_sum))
group_by(Sector, Goal) %>%
summarize(refs = sum(score)) %>%
arrange(desc(refs))
#top scorers SDG02 per Sector
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & Year == 2020) %>%
pivot_longer(cols = sdg01:sdg17, names_to = "Goal", values_to = "score") %>%
group_by(Sector, Goal) %>%
summarize(refs = sum(score)) %>%
arrange(desc(refs))
#top scorers SDG02 per Sector
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & Year == 2020) %>%
pivot_longer(cols = sdg01:sdg17, names_to = "Goal", values_to = "score") %>%
group_by(Sector, Goal) %>%
summarize(refs = sum(log(score))) %>%
arrange(desc(refs))
#top scorers SDG02 per Sector
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & Year == 2020) %>%
pivot_longer(cols = sdg01:sdg17, names_to = "Goal", values_to = "score") %>%
group_by(Sector, Goal) %>%
summarize(refs = sum(log(score))) %>%
arrange(desc(refs)) %>%
table()
#top scorers SDG02 per Sector
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & Year == 2020) %>%
pivot_longer(cols = sdg01:sdg17, names_to = "Goal", values_to = "score") %>%
group_by(Sector, Goal) %>%
summarize(refs = sum(log(score))) %>%
arrange(desc(refs)) %>%
table(refs)
#top scorers SDG02 per Sector
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & Year == 2020) %>%
pivot_longer(cols = sdg01:sdg17, names_to = "Goal", values_to = "score") %>%
group_by(Sector, Goal) %>%
summarize(refs = sum(log(score))) %>%
arrange(desc(refs))
?pivot_wider
#top scorers SDG02 per Sector
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & Year == 2020) %>%
pivot_longer(cols = sdg01:sdg17, names_to = "Goal", values_to = "score") %>%
group_by(Sector, Goal) %>%
summarize(refs = sum(log(score))) %>%
pivot_wider(names_from = "Goal", values_from = "refs") %>%
arrange(desc(refs))
#top scorers SDG02 per Sector
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & Year == 2020) %>%
pivot_longer(cols = sdg01:sdg17, names_to = "Goal", values_to = "score") %>%
group_by(Sector, Goal) %>%
summarize(refs = sum(log(score))) %>%
pivot_wider(names_from = "Goal", values_from = "refs")
#top scorers SDG02 per Sector
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & Year == 2020) %>%
pivot_longer(cols = sdg01:sdg17, names_to = "Goal", values_to = "score") %>%
group_by(Sector, Goal) %>%
summarize(refs = sum(log(score+1))) %>%
pivot_wider(names_from = "Goal", values_from = "refs")
#top scorers SDG02 per Sector
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & Year == 2020) %>%
pivot_longer(cols = sdg01:sdg17, names_to = "Goal", values_to = "score") %>%
group_by(Sector, Goal) %>%
summarize(refs = sum(log(score+1))) %>%
pivot_wider(names_from = "Goal", values_from = "refs") %>%
ggplot(aes(Sector, Goal)) +
geom_tile(aes(fill = refs), na.rm = TRUE) +
scale_fill_distiller(palette = "Spectral") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.text.y=element_text(size=5))
#top scorers SDG02 per Sector
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & Year == 2020) %>%
pivot_longer(cols = sdg01:sdg17, names_to = "Goal", values_to = "score") %>%
group_by(Sector, Goal) %>%
summarize(refs = sum(log(score+1))) %>%
pivot_wider(names_from = "Goal", values_from = "refs")
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & Year == 2020) %>%
pivot_longer(cols = sdg01:sdg17, names_to = "Goal", values_to = "score") %>%
group_by(Sector, Goal) %>%
summarize(refs = sum(log(score+1))) %>%
ggplot(aes(Sector, Goal)) +
geom_tile(aes(fill = refs), na.rm = TRUE) +
scale_fill_distiller(palette = "Spectral") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.text.y=element_text(size=5))
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & Year == 2020) %>%
pivot_longer(cols = sdg01:sdg17, names_to = "Goal", values_to = "score") %>%
group_by(Sector, Goal) %>%
summarize(refs = sum(log(score+1))) %>%
filter(refs < 60) %>%
ggplot(aes(Sector, Goal)) +
geom_tile(aes(fill = refs), na.rm = TRUE) +
scale_fill_distiller(palette = "Spectral") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.text.y=element_text(size=5))
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & Year == 2020) %>%
pivot_longer(cols = sdg01:sdg17, names_to = "Goal", values_to = "score") %>%
group_by(Sector, Goal) %>%
summarize(refs = sum(log(score+1))) %>%
filter(refs < 50) %>%
ggplot(aes(Sector, Goal)) +
geom_tile(aes(fill = refs), na.rm = TRUE) +
scale_fill_distiller(palette = "Spectral") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.text.y=element_text(size=5))
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & Year == 2020) %>%
pivot_longer(cols = sdg01:sdg17, names_to = "Goal", values_to = "score") %>%
group_by(Sector, Goal) %>%
summarize(refs = mean(log(score+1))) %>%
filter(refs < 50) %>%
ggplot(aes(Sector, Goal)) +
geom_tile(aes(fill = refs), na.rm = TRUE) +
scale_fill_distiller(palette = "Spectral") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.text.y=element_text(size=5))
#topscorers tax aggressiveness
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & Year %in% c(2016,2020)) %>%
group_by(Sector) %>%
summarize(cetr_5_s_mean = mean(cetr_5_s), cetr_5_s_median = median(cetr_5_s)) %>%
ggplot(aes(Sector)) +
geom_tile(aes(fill = cetr_5_s_mean), na.rm = TRUE) +
scale_fill_distiller(palette = "Spectral") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.text.y=element_text(size=5))
#topscorers tax aggressiveness
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & Year %in% c(2016,2020)) %>%
group_by(Sector) %>%
summarize(cetr_5_s_mean = mean(cetr_5_s), cetr_5_s_median = median(cetr_5_s)) %>%
ggplot(aes(Sector, Year)) +
geom_tile(aes(fill = cetr_5_s_mean), na.rm = TRUE) +
scale_fill_distiller(palette = "Spectral") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.text.y=element_text(size=5))
#topscorers tax aggressiveness
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & Year %in% c(2016,2020)) %>%
group_by(Sector, Year) %>%
summarize(cetr_5_s_mean = mean(cetr_5_s), cetr_5_s_median = median(cetr_5_s)) %>%
ggplot(aes(Sector, Year)) +
geom_tile(aes(fill = cetr_5_s_mean), na.rm = TRUE) +
scale_fill_distiller(palette = "Spectral") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.text.y=element_text(size=5))
#topscorers tax aggressiveness
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & Year %in% c(2016,2020)) %>%
group_by(Sector, Year) %>%
summarize(cetr_5_s_mean = mean(cetr_5_s), cetr_5_s_median = median(cetr_5_s)) %>%
ggplot(aes(Sector, Year)) +
geom_tile(aes(fill = -cetr_5_s_mean), na.rm = TRUE) +
scale_fill_distiller(palette = "Spectral") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.text.y=element_text(size=5))
#topscorers tax aggressiveness
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & (Year == 2016 | Year == 2020)) %>%
group_by(Sector, Year) %>%
summarize(cetr_5_s_mean = mean(cetr_5_s), cetr_5_s_median = median(cetr_5_s)) %>%
ggplot(aes(Sector, Year)) +
geom_tile(aes(fill = -cetr_5_s_mean), na.rm = TRUE) +
scale_fill_distiller(palette = "Spectral") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.text.y=element_text(size=5))
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & (Year == 2016 | Year == 2020)) %>%
group_by(Sector, Year) %>%
summarize(cetr_5_s_mean = mean(cetr_5_s), cetr_5_s_median = median(cetr_5_s))
#topscorers tax aggressiveness
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & (Year == 2016 | Year == 2020)) %>%
group_by(Sector, Year) %>%
summarize(cetr_5_s_mean = mean(cetr_5_s), cetr_5_s_median = median(cetr_5_s)) %>%
ggplot(aes(Sector, factor(Year))) +
geom_tile(aes(fill = -cetr_5_s_mean), na.rm = TRUE) +
scale_fill_distiller(palette = "Spectral") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.text.y=element_text(size=5))
#topscorers tax aggressiveness
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & (Year == 2016 | Year == 2020)) %>%
group_by(Sector, Year) %>%
summarize(cetr_5_s_mean = mean(cetr_5_s), cetr_5_s_median = median(cetr_5_s)) %>%
ggplot(aes(Sector, factor(Year))) +
geom_tile(aes(fill = -cetr_5_s_mean), na.rm = TRUE) +
scale_fill_distiller(palette = "Spectral") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.text.y=element_text(size=10))
df[df$Sector=="OIL, GAS, COAL & RELATED SERVICES"]
df %>% filter(Sector=="OIL, GAS, COAL & RELATED SERVICES")
#mean scores per sector of tax aggressiveness
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & (Year == 2016 | Year == 2020)) %>%
group_by(Sector, Year) %>%
summarize(cetr_5_s_mean = mean(cetr_5_s), cetr_5_s_median = median(cetr_5_s), n= n()) %>%
ggplot(aes(Sector, factor(Year))) +
geom_tile(aes(fill = -cetr_5_s_mean), na.rm = TRUE) +
scale_fill_distiller(palette = "Spectral") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.text.y=element_text(size=10))
#mean scores per sector of tax aggressiveness
df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & (Year == 2016 | Year == 2020)) %>%
group_by(Sector, Year) %>%
summarize(cetr_5_s_mean = mean(cetr_5_s), cetr_5_s_median = median(cetr_5_s), n= n()) %>%
ggplot(aes(Sector, factor(Year))) +
geom_tile(aes(fill = -cetr_5_s_mean), na.rm = TRUE) +
geom_text(n) +
scale_fill_distiller(palette = "Spectral") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.text.y=element_text(size=10))
#mean scores per sector of tax aggressiveness
p <- df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & (Year == 2016 | Year == 2020)) %>%
group_by(Sector, Year) %>%
summarize(cetr_5_s_mean = mean(cetr_5_s), cetr_5_s_median = median(cetr_5_s), n= n()) %>%
ggplot(aes(Sector, factor(Year))) +
geom_tile(aes(fill = -cetr_5_s_mean), na.rm = TRUE) +
scale_fill_distiller(palette = "Spectral") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.text.y=element_text(size=10))
p + geom_text(data=df, aes(Sector, factor(Year),
label=count), col="white")
p + geom_text(data=df, aes(Sector, factor(Year),
label=n), col="white")
#mean scores per sector of tax aggressiveness
newdat <- df %>% filter(cetr_5_s > -0.5 & cetr_5_s < 0.5 & (Year == 2016 | Year == 2020)) %>%
group_by(Sector, Year) %>%
summarize(cetr_5_s_mean = mean(cetr_5_s), cetr_5_s_median = median(cetr_5_s), n = n())
p<- newdat %>%
ggplot(aes(Sector, factor(Year))) +
geom_tile(aes(fill = -cetr_5_s_mean), na.rm = TRUE) +
scale_fill_distiller(palette = "Spectral") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.text.y=element_text(size=10))
p + geom_text(data=newdat, aes(Sector, factor(Year),
label=n), col="white")
p + geom_text(data=newdat, aes(Sector, factor(Year),
label=n), col="black")
df %>% filter(cetr_5 > 0 & cetr_5 < 0.5 & Year %in% c(2016,2020)) %>%
ggplot(., aes(x=ROA, y=cetr_5, col = Sector)) +
geom_point() +
facet_grid(. ~Year)
