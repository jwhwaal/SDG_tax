"sdg09",
"sdg10",
"sdg11",
"sdg12",
"sdg13",
"sdg14",
"sdg15",
"sdg16",
"sdg17",
"sdg",
"sdg_total",
"s_themes",
"SDG",
"GC",
"GRI",
"INT"
),
labels = c("Sustainability report incl. integrated dummy (report)",
"SDG  1 No Pverty (sdg01)",
"SDG  2 Zero Hunger (sdg02)",
"SDG  3 Good Health & Wellbeing (sdg03)",
"SDG  4 Quality Education (sdg04)",
"SDG  5 Gender Equality (sdg05)",
"SDG  6 Clean Water & Sanitation (sdg06)",
"SDG  7 Affordable & Clean Energy (sdg07)",
"SDG  8 Decent Work & Econ. Growth (sdg08)",
"SDG  9 Industry, Innovation & Infrastructure (sdg09)",
"SDG 10 Reduced Inequalities (sdg10)",
"SDG 11 Sustainable Cities & Communities (sdg11)",
"SDG 12 Responsible Consumption & Production (sdg12)",
"SDG 13 Climate Action (sdg13)",
"SDG 14 Life Below Water (sdg14)",
"SDG 15 Life on Land (sdg15)",
"SDG 16 Peace, Justice & Strong Institutions (sdg16)",
"SDG 17 Partnership for the Goals (sdg17)",
"SDG & 2030 Agenda mentioning (sdg)",
"Total SDG1 - SDG 17 mentioning (sdg_total)",
"SDG Themes (number) (s_themes)",
"SDG mentioning dummy (SDG)",
"Global Compact  dummy (GC)",
"Global Reporting Initiative GRI dummy (GRI)",
"Integrated Reporting IIRC dummy (INT)"
))
df %>%  sumtable(., vars = var.labs2$var, labels = var.labs2, out = "csv", file = "summary2.csv")
#make a boxplot of cash tax paid versus ESG-rating
df1 %>% mutate(cetr_w = Winsorize(cetr, minval = 0, maxval = 1, na.rm = TRUE)) %>%
ggplot(aes(cetr_w, ESG, col = ctrygrp)) +
geom_point() +
geom_density_2d() +
xlab( "Cash Effective Tax Rate") +
ylab("ESG-rating") +
labs(col = "Country Group")
#make a boxplot of cash tax paid versus ESG-rating
df1 %>% mutate(cetr_w = Winsorize(cetr_s, minval = 0, maxval = 1, na.rm = TRUE)) %>%
ggplot(aes(cetr_w, ESG, col = ctrygrp)) +
geom_point() +
geom_density_2d() +
xlab( "Cash Effective Tax Rate") +
ylab("ESG-rating") +
labs(col = "Country Group")
#make a boxplot of cash tax paid versus ESG-rating
df1 %>% mutate(cetr_w = Winsorize(cetr_s, minval = 0, maxval = 1, na.rm = TRUE)) %>%
ggplot(aes(cetr_s, ESG, col = ctrygrp)) +
geom_point() +
geom_density_2d() +
xlab( "Cash Effective Tax Rate") +
ylab("ESG-rating") +
labs(col = "Country Group")
#make a boxplot of CETR versus ESG-rating and reporting
df %>% mutate(cetr_w = Winsorize(cetr_s, probs = c(0.01, 0.99), na.rm = TRUE)) %>%
ggplot(aes(cetr_w, ESG, colour = ctrygrp)) +
geom_point() +
geom_density_2d() +
xlab( "Cash Effective Tax Rate") +
ylab("ESG-rating") +
labs(colour = "Country Group")
#make a boxplot of BTD versus ESG-rating and reporting
df %>% mutate(cetr_w = Winsorize(cetr, probs = c(0.05, 0.95), na.rm = TRUE)) %>%
ggplot(aes(BTD, ESG, colour = ctrygrp)) +
geom_point() +
geom_density_2d() +
xlab( "Book-Tax Difference") +
ylab("ESG-rating") +
labs(colour = "Country Group")
#make a boxplot of CETR versus ESG-rating and reporting
df %>% mutate(cetr_w = Winsorize(cetr_s, probs = c(0.01, 0.99), na.rm = TRUE)) %>%
ggplot(aes(cetr_w, ESG, colour = ctrygrp)) +
geom_point() +
geom_density_2d() +
xlab( "Cash Effective Tax Rate scaled") +
ylab("ESG-rating") +
labs(colour = "Country Group")
#make a boxplot of CETR versus ESG-rating and reporting
df %>% mutate(cetr_w = Winsorize(cetr_s, probs = c(0.05, 0.95), na.rm = TRUE)) %>%
ggplot(aes(cetr_w, ESG, colour = ctrygrp)) +
geom_point() +
geom_density_2d() +
xlab( "Cash Effective Tax Rate scaled") +
ylab("ESG-rating") +
labs(colour = "Country Group")
#make a boxplot of CETR versus ESG-rating and reporting
df %>% mutate(cetr_w = Winsorize(cetr_s, probs = c(0.05, 0.95), na.rm = TRUE)) %>%
ggplot(aes(cetr_w, ESG, colour = ctrygrp)) +
geom_point() +
geom_density_3d() +
xlab( "Cash Effective Tax Rate scaled") +
ylab("ESG-rating") +
labs(colour = "Country Group")
#make a boxplot of BTD versus ESG-rating and reporting
df %>% mutate(cetr_w = Winsorize(cetr, probs = c(0.01, 0.99), na.rm = TRUE)) %>%
ggplot(aes(BTD, ESG, colour = ctrygrp)) +
geom_point() +
geom_density_2d() +
xlab( "Book-Tax Difference") +
ylab("ESG-rating") +
labs(colour = "Country Group")
#make a boxplot of CETR versus ESG-rating and reporting
df %>% mutate(cetr_w = Winsorize(cetr_s, probs = c(0.01, 0.91), na.rm = TRUE)) %>%
ggplot(aes(cetr_w, ESG, colour = ctrygrp)) +
geom_point() +
geom_density_2d() +
xlab( "Cash Effective Tax Rate scaled") +
ylab("ESG-rating") +
labs(colour = "Country Group")
#make a boxplot of CETRS versus ESG-rating and reporting
df %>% mutate(cetr_w = Winsorize(cetr_s, probs = c(0.01, 0.99), na.rm = TRUE)) %>%
ggplot(aes(cetr_w, log(sdg_total+1))) +
geom_point() +
geom_density_2d() +
xlab( "CETR_S") +
ylab("SDG_total (log)") +
labs(colour = "Country Group")+
facet_wrap(. ~ ctrygrp)
#make a boxplot of CETRS versus ESG-rating and reporting
df %>% mutate(cetr_w = Winsorize(cetr_s, probs = c(0.01, 0.99), na.rm = TRUE)) %>%
ggplot(aes(cetr_w, log(sdg_total+1)), colour = ctrygrp) +
geom_point() +
geom_density_2d() +
xlab( "CETR_S") +
ylab("SDG_total (log)") +
labs(colour = "Country Group")
#make a boxplot of CETRS versus ESG-rating and reporting
df %>% mutate(cetr_w = Winsorize(cetr_s, probs = c(0.01, 0.99), na.rm = TRUE)) %>%
ggplot(aes(cetr_w, log(sdg_total+1), col = ctrygrp)) +
geom_point() +
geom_density_2d() +
xlab( "CETR_S") +
ylab("SDG_total (log)") +
labs(colour = "Country Group")
#make a boxplot of CETR versus ESG-rating and reporting
df %>% mutate(cetr_w = Winsorize(cetr_s, probs = c(0.01, 0.91), na.rm = TRUE)) %>%
ggplot(aes(cetr_w, ESG, colour = ctrygrp)) +
geom_point() +
geom_density_2d() +
xlab( "Cash Effective Tax Rate scaled") +
ylab("ESG-rating") +
labs(colour = "Country Group")
#make a boxplot of CETR versus ESG-rating and reporting
df %>% mutate(cetr_w = Winsorize(cetr_s, probs = c(0.01, 0.99), na.rm = TRUE)) %>%
ggplot(aes(cetr_w, ESG, colour = ctrygrp)) +
geom_point() +
geom_density_2d() +
xlab( "Cash Effective Tax Rate scaled") +
ylab("ESG-rating") +
labs(colour = "Country Group")
#make a boxplot of CETR versus ESG-rating and reporting
df %>% mutate(cetr_w = Winsorize(cetr_s, probs = c(0.01, 0.99), na.rm = TRUE)) %>%
ggplot(aes(cetr_w, ESG)) +
geom_point() +
geom_density_2d() +
xlab( "Cash Effective Tax Rate scaled") +
ylab("ESG-rating") +
facet_wrap(. ~ ctrygrp)
matrix <- df %>%
mutate(cetr = Winsorize(cetr, probs = c(0.01, 0.99), na.rm = TRUE),
cetr_s = Winsorize(cetr_s, probs = c(0.01, 0.99), na.rm = TRUE),
report = as.numeric(report),
SDG = as.numeric(SDG),
GC = as.numeric(GC),
GRI = as.numeric(GRI),
INT = as.numeric(INT)) %>%
select(year, SIZE, ROA, PERF, LTD, cetr, BTD, str, FOR, ESG, report, sdg:INT, -int)
matrix <- df %>%
mutate(cetr = Winsorize(cetr, probs = c(0.01, 0.99), na.rm = TRUE),
cetr_s = Winsorize(cetr_s, probs = c(0.01, 0.99), na.rm = TRUE),
report = as.numeric(report),
SDG = as.numeric(SDG),
GC = as.numeric(GC),
GRI = as.numeric(GRI),
INT = as.numeric(INT)) %>%
select(year, SIZE, ROA, PERF, LTD, cetr, cetr_s, BTD, str, FOR, ESG, report, sdg:INT, -int)
cormat <- matrix %>%
cor(use = "complete.obs")
corrplot(cormat)
# mat : is a matrix of data
# ... : further arguments to pass to the native R cor.test function
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
# matrix of the p-value of the correlation
p.mat <- cor.mtest(matrix)
head(p.mat[, 1:5])
# dit is de correlatiematrix om af te drukken
corrplot(cormat, p.mat = p.mat, sig.level = 0.05, method = "color",  order = "hclust")
library(corrplot)
library(psych)
cormat <- matrix %>%
cor(use = "complete.obs")
corrplot(cormat)
# mat : is a matrix of data
# ... : further arguments to pass to the native R cor.test function
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
# matrix of the p-value of the correlation
p.mat <- cor.mtest(matrix)
head(p.mat[, 1:5])
# dit is de correlatiematrix om af te drukken
corrplot(cormat, p.mat = p.mat, sig.level = 0.05, method = "color",  order = "hclust")
matrix <- df %>%
mutate(cetr = Winsorize(cetr, probs = c(0.01, 0.99), na.rm = TRUE),
cetr_s = Winsorize(cetr_s, probs = c(0.01, 0.99), na.rm = TRUE),
report = as.numeric(report),
SDG = as.numeric(SDG),
GC = as.numeric(GC),
GRI = as.numeric(GRI),
INT = as.numeric(INT)) %>%
select(year, SIZE, ROA, PERF, LTD, cetr, cetr_s, BTD, str, FOR, ESG, report, sdg:INT, -int, -gri, -gc)
cormat <- matrix %>%
cor(use = "complete.obs")
corrplot(cormat)
# mat : is a matrix of data
# ... : further arguments to pass to the native R cor.test function
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
# matrix of the p-value of the correlation
p.mat <- cor.mtest(matrix)
head(p.mat[, 1:5])
# dit is de correlatiematrix om af te drukken
corrplot(cormat, p.mat = p.mat, sig.level = 0.05, method = "color",  order = "hclust")
matrix <- df %>%
mutate(cetr = Winsorize(cetr, probs = c(0.01, 0.99), na.rm = TRUE),
cetr_s = Winsorize(cetr_s, probs = c(0.01, 0.99), na.rm = TRUE),
report = as.numeric(report),
SDG = as.numeric(SDG),
GC = as.numeric(GC),
GRI = as.numeric(GRI),
INT = as.numeric(INT),
SDG_total = log(sdg_total+1),
sdg = log(sdg+1)) %>%
select(year, SIZE, ROA, PERF, LTD, cetr, cetr_s, BTD, str, FOR, ESG, report, SDG_total, sdg:INT, -int, -gri, -gc)
cormat <- matrix %>%
cor(use = "complete.obs")
corrplot(cormat)
# mat : is a matrix of data
# ... : further arguments to pass to the native R cor.test function
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
# matrix of the p-value of the correlation
p.mat <- cor.mtest(matrix)
head(p.mat[, 1:5])
# dit is de correlatiematrix om af te drukken
corrplot(cormat, p.mat = p.mat, sig.level = 0.05, method = "color",  order = "hclust")
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(cormat, method="color", col=col(200),
type="upper", order="hclust",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
# Combine with significance
p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag=FALSE ,
number.cex = 0.7,
tl.cex = 1.0
)
matrix <- df %>%
mutate(cetr = Winsorize(cetr, probs = c(0.01, 0.99), na.rm = TRUE),
cetr_s = Winsorize(cetr_s, probs = c(0.01, 0.99), na.rm = TRUE),
report = as.numeric(report),
SDG = as.numeric(SDG),
GC = as.numeric(GC),
GRI = as.numeric(GRI),
INT = as.numeric(INT),
SDG_total = log(sdg_total+1),
sdg = log(sdg+1)) %>%
select(year, SIZE, ROA, PERF, LTD, cetr, cetr_s, BTD, str, FOR, ESG, report,
SDG_total, sdg:INT, -int, -gri, -gc, -sdg_total)
cormat <- matrix %>%
cor(use = "complete.obs")
corrplot(cormat)
# mat : is a matrix of data
# ... : further arguments to pass to the native R cor.test function
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
# matrix of the p-value of the correlation
p.mat <- cor.mtest(matrix)
head(p.mat[, 1:5])
# dit is de correlatiematrix om af te drukken
corrplot(cormat, p.mat = p.mat, sig.level = 0.05, method = "color",  order = "hclust")
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(cormat, method="color", col=col(200),
type="upper", order="hclust",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
# Combine with significance
p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag=FALSE ,
number.cex = 0.7,
tl.cex = 1.0
)
corrplot(cormat, method="color", col=col(200),
type="upper", order="hclust",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
# Combine with significance
p.mat = p.mat, sig.level = 0.05, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag=FALSE ,
number.cex = 0.7,
tl.cex = 1.0
)
#first stage: regression of CETR versus ESG-PERF on DF1 (3000 observations)
form1a <- cetr_w ~ SIZE + ESG + ROA + PERF + LTD + LEV + FOR + FOREIGN + ctrygrp + factor(year)
form1b <- BTD ~ SIZE + ESG + ROA + PERF + LTD + LEV + FOR + FOREIGN + ctrygrp + factor(year)
#winsorize data
df1_w <- df1 %>% mutate(cetr_w = Winsorize(cetr_s, minval = 0, maxval = 1, na.rm = TRUE))
#winsorize data
df1_w <- df1 %>% mutate(cetr_w = Winsorize(cetr_s, probs = c(0.01,0.99), na.rm = TRUE))
#SOME REGRESSIONS
model1.pooling <- lm(form1a, data = df1_w)
summary(model1.pooling)
model1b.pooling <- lm(form1b, data = df1_w)
summary(model1b.pooling)
model2a.pool <- plm(form1a, data=df1_w, model="pooling", index=c("year"), random.method = "walhus")
summary(model2a.pool)
#=========================================== REGRESSIONS =======================
# fit some PLM models
library(plm)
model2a.pool <- plm(form1a, data=df1_w, model="pooling", index=c("year"), random.method = "walhus")
summary(model2a.pool)
# een klein model om ESG-rating met SDG-variabelen in verband te brengen
form2 <- ESG ~ log(sdg+1) + log(sdg_total+1) + log(s_themes+1) +  ctrygrp +
SIZE + factor(year)
model.sdg<- lm(form2, data = df)
summary(model.sdg)
# een klein model om ESG-rating met SDG-variabelen in verband te brengen
form2 <- log(ESG) ~ log(sdg+1) + log(sdg_total+1) + log(s_themes+1) +  ctrygrp +
SIZE + factor(year)
model.sdg<- lm(form2, data = df)
summary(model.sdg)
# Op de kleine dataset, het verband tussen SDG en FESG vaststellen.
df_w <- df %>%
mutate(cetr_s = Winsorize(cetr_s, probs = c(0.01,0.99), na.rm = TRUE))
# een groter model dat ook andere variabelen heeft, die sterker correlerenn
form3 <- ESG ~ log(sdg+1) + log(sdg_total+1) + log(s_themes+1) +  ctrygrp +
SIZE + cetr_s + BTD + SDG + GC + GRI + INT + report + factor(year)
model.sdg2<- lm(form3, data = df_w)
summary(model.sdg2)
model.sdg2b<- lm(log(sdg+1)  ~ ctrygrp +
SIZE + cetr_s + BTD + GC + GRI + INT  + factor(year),
data = df_w)
summary(model.sdg2b)
model.sdg2c<- lm(log(sdg_total+1)  ~ ctrygrp +
SIZE + cetr + BTD + GC + GRI + INT + factor(year),
data = df_w)
model.sdg2c<- lm(log(sdg_total+1)  ~ ctrygrp +
SIZE + cetr_s + BTD + GC + GRI + INT + factor(year),
data = df_w)
summary(model.sdg2c)
model.sdg2d<- lm(s_themes  ~ ctrygrp +
SIZE + cetr_s + BTD + GC + GRI + INT + factor(year),
data = df_w)
summary(model.sdg2d)
form4 <- BTD ~ log(sdg+1) + log(sdg_total+1) + log(s_themes+1) + ESG +
PERF +  ctrygrp +
SIZE + ROA + LEV + LTD + SDG + GC + GRI + INT + report + factor(year)
model.sdg3<- lm(form4, data = df_w)
summary(model.sdg3)
form5 <- cetr_s ~ log(sdg+1) + log(sdg_total+1) + log(s_themes+1) + ESG +
PERF +  ctrygrp +
SIZE + ROA + LEV + LTD + SDG + GC + GRI + INT + report + factor(year)
model.sdg5<- lm(form5, data = df_w)
summary(model.sdg5)
form4 <- BTD ~ log(sdg+1) + log(sdg_total+1) + log(s_themes+1) + ESG +
PERF +  ctrygrp + ASSETS +
SIZE + ROA + LEV + LTD + SDG + GC + GRI + INT + report + factor(year)
model.sdg4<- lm(form4, data = df_w)
summary(model.sdg4)
form4 <- BTD ~ log(sdg+1) + log(sdg_total+1) + log(s_themes+1) + ESG +
PERF +  ctrygrp + ASSETS + PTI +
SIZE + ROA + LEV + LTD + SDG + GC + GRI + INT + report + factor(year)
model.sdg4<- lm(form4, data = df_w)
summary(model.sdg4)
form4 <- BTD ~ log(sdg+1) + log(sdg_total+1) + log(s_themes+1) +
PERF +  ctrygrp +
SIZE + ROA + LEV + LTD + SDG + GC + GRI + INT + report + factor(year)
model.sdg4<- lm(form4, data = df_w)
summary(model.sdg4)
E
E
form4 <- BTD ~ log(sdg+1) + log(sdg_total+1) + log(s_themes+1) + ESG +
PERF +  ctrygrp +
SIZE + ROA + LEV + LTD + SDG + GC + GRI + INT + report + factor(year)
model.sdg4<- lm(form4, data = df_w)
summary(model.sdg4)
form6 <= ESG ~  log(sdg01+1) + log(sdg02+1) + log(sdg03+1) + log(sdg04+1) +
log(sdg05+1) + log(sdg06+1) + log(sdg07+1) + log(sdg08+1) +
+log(sdg09+1) + log(sdg10+1) + log(sdg11+1) + log(sdg12+1) +
log(sdg13+1) + log(sdg14+1) + log(sdg15+1) + log(sdg16+1) +
log(sdg17+1) + log(sdg_total) + log(sdg+1)
model.sdg6<- lm(form6, data = df_w)
form6 <= ESG ~  log(sdg01+1) + log(sdg02+1) + log(sdg03+1) + log(sdg04+1) +
log(sdg05+1) + log(sdg06+1) + log(sdg07+1) + log(sdg08+1) +
+log(sdg09+1) + log(sdg10+1) + log(sdg11+1) + log(sdg12+1) +
log(sdg13+1) + log(sdg14+1) + log(sdg15+1) + log(sdg16+1) +
log(sdg17+1) + log(sdg_total) + log(sdg+1)
model.sdg6<- lm(form6, data = df_w)
form6 <- ESG ~  log(sdg01+1) + log(sdg02+1) + log(sdg03+1) + log(sdg04+1) +
log(sdg05+1) + log(sdg06+1) + log(sdg07+1) + log(sdg08+1) +
+log(sdg09+1) + log(sdg10+1) + log(sdg11+1) + log(sdg12+1) +
log(sdg13+1) + log(sdg14+1) + log(sdg15+1) + log(sdg16+1) +
log(sdg17+1) + log(sdg_total) + log(sdg+1)
model.sdg6<- lm(form6, data = df_w)
model.sdg6<- lm(form5, data = df_w)
summary(model.sdg6)
form6 <- ESG ~  log(sdg01+1) + log(sdg02+1) + log(sdg03+1) + log(sdg04+1) +
log(sdg05+1) + log(sdg06+1) + log(sdg07+1) + log(sdg08+1) +
+log(sdg09+1) + log(sdg10+1) + log(sdg11+1) + log(sdg12+1) +
log(sdg13+1) + log(sdg14+1) + log(sdg15+1) + log(sdg16+1) +
log(sdg17+1) + log(sdg+1)
model.sdg6<- lm(form6, data = df_w)
summary(model.sdg6)
form6 <- ESG ~  log(sdg01+1) + log(sdg02+1) + log(sdg03+1) + log(sdg04+1) +
log(sdg05+1) + log(sdg06+1) + log(sdg07+1) + log(sdg08+1) +
+log(sdg09+1) + log(sdg10+1) + log(sdg11+1) + log(sdg12+1) +
log(sdg13+1) + log(sdg14+1) + log(sdg15+1) + log(sdg16+1) +
log(sdg17+1) + log(sdg+1) +log(sdg_total+1) + SDG
model.sdg6<- lm(form6, data = df_w)
summary(model.sdg6)
form6 <- ESG ~  log(sdg01+1) + log(sdg02+1) + log(sdg03+1) + log(sdg04+1) +
log(sdg05+1) + log(sdg06+1) + log(sdg07+1) + log(sdg08+1) +
+log(sdg09+1) + log(sdg10+1) + log(sdg11+1) + log(sdg12+1) +
log(sdg13+1) + log(sdg14+1) + log(sdg15+1) + log(sdg16+1) +
log(sdg17+1) + log(sdg+1) +log(sdg_total+1) + SDG + s_themes
model.sdg6<- lm(form6, data = df_w)
summary(model.sdg6)
form6 <- ESG ~  log(sdg01+1) + log(sdg02+1) + log(sdg03+1) + log(sdg04+1) +
log(sdg05+1) + log(sdg06+1) + log(sdg07+1) + log(sdg08+1) +
+log(sdg09+1) + log(sdg10+1) + log(sdg11+1) + log(sdg12+1) +
log(sdg13+1) + log(sdg14+1) + log(sdg15+1) + log(sdg16+1) +
log(sdg17+1) + log(sdg+1) +log(sdg_total+1) + SDG + s_themes +GC + GRI + INT
model.sdg6<- lm(form6, data = df_w)
summary(model.sdg6)
